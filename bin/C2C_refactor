#!/usr/bin/env python
import argparse
import logging
import os
import sys
from pathlib import Path
from time import time
import shutil
import traceback

import h5py
import pandas as pd
import dosma
import numpy as np
from datetime import datetime
import matplotlib.pyplot as plt

# import voxel as vx
from tqdm import tqdm

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' 
os.environ['TF_FORCE_GPU_ALLOW_GROWTH'] = 'true'

from comp2comp import metrics
from comp2comp.inference_2d import inference_2d
from comp2comp.models import Models
from comp2comp.nn_unet import spine_seg
from comp2comp.preferences import PREFERENCES, reset_preferences, save_preferences
from comp2comp.run import find_files, get_dicom_paths_and_num, get_file_names
from comp2comp.utils import dl_utils, spine_utils
from comp2comp.utils.logger import setup_logger
from comp2comp.utils.visualization import (
    generate_panel,
    save_binary_segmentation_overlay,
)

os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"



def main():
    '''
    Entry point. Code is bad but functionality > readability. Best of luck!
    '''
    args = argument_parser().parse_args()
    if args.action == "muscle_adipose_tissue":
        handle_process_2d(args)
    elif args.action == "spine_muscle_adipose_tissue":
    else:
        raise AssertionError("{} command not supported".format(args.action))


if __name__ == "__main__":
    main()


